matrix:
  include:
    # Job 1) Run analyzer
    - os: linux
      env:
        - SHARD=Analyze
      sudo: false
      addons:
        apt:
          # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
          sources:
            - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
          packages:
            - libstdc++6
            - fonts-droid-fallback
      before_script:
        - git clone https://github.com/flutter/flutter.git /tmp/flutter
        - export PATH=/tmp/flutter/bin:/tmp/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter doctor
        - pub global activate tuneup
        - flutter packages get
      script:
        - pub global run tuneup check
    # Job 2) Check format and run tests
    - os: linux
      env:
        - SHARD=Format+Test
      jdk: oraclejdk11
      sudo: false
      addons:
        apt:
          # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
          sources:
            - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
            - llvm-toolchain-precise # for clang-format-5.0
          packages:
            - libstdc++6
            - fonts-droid-fallback
            - clang-format-5.0
      before_script:
        - wget https://github.com/google/google-java-format/releases/download/google-java-format-1.8/google-java-format-1.8-all-deps.jar
        - git clone https://github.com/flutter/flutter.git /tmp/flutter
        - export PATH=/tmp/flutter/bin:/tmp/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter doctor
      script:
        # Part 1) format
        - shopt -s globstar
        - flutter format ./**/*.dart
        - java -jar google-java-format-1.8-all-deps.jar -a --replace ./**/*.java
        - clang-format-5.0 -i --style=Google ./**/*.h ./**/*.m
        # Part 2) test
        - flutter test --color
    # Job 3) Build example APKs and run Java tests
    # - os: linux
    #   env:
    #     - SHARD=Build-example-APK+Java-Tests
    #   jdk: oraclejdk8
    #   sudo: false
    #   addons:
    #     apt:
    #       # Flutter depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
    #       sources:
    #         - ubuntu-toolchain-r-test # if we don't specify this, the libstdc++6 we get is the wrong version
    #       packages:
    #         - lib32stdc++6 # https://github.com/flutter/flutter/issues/6207
    #         - libstdc++6
    #         - fonts-droid
    #   before_script:
    #     - wget https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
    #     - mkdir android-sdk
    #     - unzip -qq sdk-tools-linux-3859397.zip -d android-sdk
    #     - export ANDROID_HOME=`pwd`/android-sdk
    #     - export PATH=`pwd`/android-sdk/tools/bin:$PATH
    #     - mkdir -p /home/travis/.android # silence sdkmanager warning
    #     - echo 'count=0' > /home/travis/.android/repositories.cfg # silence sdkmanager warning
    #     # suppressing output of sdkmanager to keep log under 4MB (travis limit)
    #     - echo y | sdkmanager "tools" >/dev/null
    #     - echo y | sdkmanager "platform-tools" >/dev/null
    #     - echo y | sdkmanager "build-tools;26.0.3" >/dev/null
    #     - echo y | sdkmanager "platforms;android-26" >/dev/null
    #     - echo y | sdkmanager "extras;android;m2repository" >/dev/null
    #     - echo y | sdkmanager "extras;google;m2repository" >/dev/null
    #     - echo y | sdkmanager "patcher;v4" >/dev/null
    #     - sdkmanager --list
    #     - wget http://services.gradle.org/distributions/gradle-4.1-bin.zip
    #     - unzip -qq gradle-4.1-bin.zip
    #     - export GRADLE_HOME=$PWD/gradle-4.1
    #     - export PATH=$GRADLE_HOME/bin:$PATH
    #     - gradle -v
    #     - git clone https://github.com/flutter/flutter.git /tmp/flutter
    #     - export PATH=/tmp/flutter/bin:/tmp/flutter/bin/cache/dart-sdk/bin:$PATH
    #     - flutter doctor
    #   script:
    #     - pushd example; flutter build apk; popd
    # # Job 4) Build example IPAs
    # - os: osx
    #   env:
    #     - SHARD=Build-example-IPA
    #   language: generic
    #   osx_image: xcode9.3
    #   before_script:
    #     - brew update
    #     - brew install libimobiledevice
    #     - brew install ideviceinstaller
    #     - brew install ios-deploy
    #     - pod repo update
    #     - gem update cocoapods
    #     - git clone https://github.com/flutter/flutter.git /tmp/flutter
    #     - export PATH=/tmp/flutter/bin:/tmp/flutter/bin/cache/dart-sdk/bin:$PATH
    #     - flutter doctor
    #   script:
    #     - pushd example; flutter build ios --no-codesign; popd

cache:
  directories:
    - $HOME/.pub-cache
